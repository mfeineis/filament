{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/dev/workspace/playground/rye/rye-pagelet/src/index.js","webpack:///./src/pagelet.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;ACnEA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACjBiB;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA","file":"rye-suggestions.pagelet.js?8b6298c7afec7","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/pagelet.js\");\n","/* global Rye */\n// FIXME: Maybe we should add \"rye-core\" as an explicit but external dependency?\n\nexport const define = (name, factory) => {\n    console.log(\"rye-pagelet.index name\", name, \"factory\", factory);\n\n    if (typeof name !== \"string\" || !/rye-[\\w]+/.test(name)) {\n        throw new Error(\"Pagelet name is not defined or invalid.\");\n    }\n\n    if (typeof factory !== \"function\" || factory.length < 1) {\n        throw new Error([\n            \"Pagelet factory should receive at least one 'rootNode' dependency.\"\n        ].join(\" \"));\n    }\n\n    Rye.define(name, [], () => factory);\n};\n\n","import { define } from \"rye-pagelet\";\n\nexport const PAGELET_NAME = \"rye-suggestions\";\n\nexport const factory = root => {\n    const document = root.ownerDocument;\n    //root.innerHTML = \"<pre>rye-suggestions bla</pre>\";\n\n    const it = document.createElement(\"div\");\n    it.setAttribute(\"data-pagelet\", \"true\");\n    it.innerHTML = \"<pre>rye-suggestions</pre>\";\n\n    const one = document.createElement(\"span\");\n    one.setAttribute(\"data-id\", \"1\");\n\n    const two = document.createElement(\"span\");\n    two.setAttribute(\"data-id\", \"2\");\n\n    const nodes = [it, one, two];\n    nodes.forEach(node => root.appendChild(node));\n\n    //root.parentNode.replaceChild(it, root);\n\n    //nodes.reverse().forEach(node => (\n    //    it.parentNode.insertBefore(node, it.nextSibling)\n    //));\n};\n\ndefine(PAGELET_NAME, factory);\n"],"sourceRoot":""}